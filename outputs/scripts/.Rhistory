degree(net)
net %v% 'indegrees' <- degree(net, cmode = "indegree")
net
net %v% 'outdegrees' <- degree(net, cmode = "outdegree")
net %v% 'total' <- degree(net, cmode = "total")
net %v% 'total' <- degree(net, cmode = "freeman")
hist(net %v% 'total')
net <- network.initialize(1000, directed = F)
net[,] <- rgraph(1000, tprob = 1/5)
net <- network.initialize(100, directed = F)
net[,] <- rgraph(100, tprob = 1/5)
gplot(net)
net[,] <- rgraph(100, tprob = 2/5)
gplot(net)
gden(net)
net <- network.initialize(100, directed = T)
net[,] <- rgraph(100, tprob = 2/5)
gden(net)
?rgraph
net <- network.initialize(100, directed = F)
net[,] <- rgraph(100, tprob = 2/5, mode = "graph")
gden(net)
net <- network.initialize(100, directed = T)
net[,] <- rgraph(100, tprob = 2/5)
gden(net)
gplot(net)
net[,] <- rgraph(100, tprob = 1/10)
gplot(net)
hist(degree(net))
?rgraph
?qnorm
??normal
??test
2^-4
scale.free <- function(x){#
	return(3 * x^-4)#
}
?curve
curve(scale.free, 0, 20)
c = 2#
k = 2#
scale.free <- function(x){#
	return(c * x^-k)#
}
curve(scale.free, 0, 20)
k = 1.2
curve(scale.free, 0, 20)
c = 10
curve(scale.free, 0, 20)
log.scale.free <- function(x){#
	log(scale.free(x))#
}
curve(log.scale.free, 0, 20)
curve(scale.free, 0, 20)
?par
par(mfrow = c(2,1))
curve(scale.free, 0, 20)
curve(log.scale.free, 0, 20)
log.log.scale.free <- function(x){#
	return(c - k * x)#
}
par(mfrow = c(3,1))
curve(scale.free, 0, 20)
curve(log.scale.free, 0, 20)
curve(log.log.scale.free, 0, 20)
?gtrans
library(network)
library(sna)
?gtrans
g <-rgraph(5,10)
gplot(g)
g <-rgraph(5,2)
gplot(g)
g <-rgraph(5,10)
gtrans(g)
?triad
?triad.census
?grand
??grand
g <- rgraph(4, tprob = 0.5)
gplot(g)
triand.census(g)
triad.census(g)
?triad.census
gtrans(g)
?gtrans
?eigen
??bona
??bo
??bon
bonpow
g
prestige(g)
bonpow(g)
betweenness(g)
closeness(g)
library(sna)
library(network)
?rgraph
net = rgraph(10, 0.2)
gplot(net)
gplot(rgraph(10, 0.2))
gplot(rgraph(10, 0.5))
?rgraph
gplot(rgraph(10, tprob= 0.5))
gplot(rgraph(10, tprob= 0.2))
gplot(rgraph(50, tprob= 0.1))
gplot(rgraph(50, tprob= 0.02))
?pow
??power
2^3
(2/3)^20
??info
?infocent
library(sna)
library(network)
?infocent
government <- read.csv('../data/Government_snapshot.txt', header = T, StringsAsFactors=F)
government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, StringsAsFactors = F)
government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, dtringsAsFactors = F)
government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
pwd
wdir
ls()
list.files()
government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
government
government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
government
Government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Centralbank <- read.csv('../data/CentralBank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Bank <- read.csv('../data/Bank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Firm <- read.csv('../data/Firm_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Household <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Household
Household <- read.csv('../data/Household_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Household
Bank
Household <- read.csv('../data/Household_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Household
Household[1]
Household[1;]
Household[1,]
Household[40,]
Household[1:40,]
Household <- read.csv('../data/Household_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Household[1:40,]
Bank <- read.csv('../data/Bank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Bank
Household <- read.csv('../data/Household_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Household
Household[0;]
Household[0,]
Household[1,]
Household[40,]
Household[1:40,]
Household <- read.csv('../data/Household_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Household[1:40,]
Government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Centralbank <- read.csv('../data/CentralBank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Equityfund <- read.csv('../data/EquityFund_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Bank <- read.csv('../data/Bank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Firm <- read.csv('../data/Firm_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Household <- read.csv('../data/Household_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Centralbank <- read.csv('../data/CentralBank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Equityfund <- read.csv('../data/EquityFund_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Bank <- read.csv('../data/Bank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Firm <- read.csv('../data/Firm_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Household <- read.csv('../data/Household_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
EquityFund
Equityfund
Bank
Household[1:40,]
Firm
Government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Centralbank <- read.csv('../data/CentralBank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Equityfund <- read.csv('../data/EquityFund_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Bank <- read.csv('../data/Bank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Firm <- read.csv('../data/Firm_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Household <- read.csv('../data/Household_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Bank
Equityfund
Household[1:2,]
Household[,1:2]
Firm[,1:2]
head(Firm[,1:2])
head(Firm[:,1,3])
head(Firm[:,c(1,3)])
head(Firm[,c(1,3)])
head(Firm[,c(1,4)])
head(Firm[,c(1,4)])
boxplot(Firm[,c(1,4)])
boxplot(Firm[1,c(1,4)])
times <- seq(1:20)
times
values <- matrix(rnorm(20*100,0,1),nrow=20,ncol=100)
values
boxplot(values~times)
values <- matrix(rnorm(20*100,0,1),nrow=20,ncol=100)
Firm
head(Firm)
Firm$TOTAL_ASSETS
Government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Centralbank <- read.csv('../data/CentralBank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Equityfund <- read.csv('../data/EquityFund_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Bank <- read.csv('../data/Bank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Firm <- read.csv('../data/Firm_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Household <- read.csv('../data/Household_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Firm$TOTAL_ASSETS
length(Firm$TOTAL_ASSETS)
head(Firm$TOTAL_ASSETS)
tail(Firm$TOTAL_ASSETS)
head(Bank)
head(Bank$DEPOSITS)
length(Bank$DEPOSITS)
Bank$DEPOSITS
Government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Centralbank <- read.csv('../data/CentralBank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Equityfund <- read.csv('../data/EquityFund_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Bank <- read.csv('../data/Bank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Firm <- read.csv('../data/Firm_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Household <- read.csv('../data/Household_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Bank
Firm
Bank
Firm
Government
Centralbank
EquityFund
Equityfund
Government <- read.csv('../data/Government_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Centralbank <- read.csv('../data/CentralBank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Equityfund <- read.csv('../data/EquityFund_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Bank <- read.csv('../data/Bank_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Firm <- read.csv('../data/Firm_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)#
Household <- read.csv('../data/Household_snapshot.txt', sep = " ", header = T, stringsAsFactors = F)
Firm
Household
Bank
Bank$ID
values <- matrix(Bank$ID, nrow = 20, ncol = 2)
times <- seq(1:20)
boxplot(values~times)
times
values
values <- matrix(Bank$ID, nrow = 2, ncol = 20)
values
boxplot(values~times)
boxplot(times~values)
values <- matrix(Bank$ID, nrow = 20, ncol = 2)
values
help(matrix)
values
Bank$ID
values <- matrix(Bank$ID, nrow = 20, ncol = 2, byrow = T)
values
boxplot(times~values)
times
values
boxplot(values~times)
time_series_boxplot <- function(nagents, niter, datavector){#
	times <- (1:niter)#
	values <- matrix(datavector, nrow = niter, ncol = nagents, byrow = T)#
	boxplot(values~times)#
}
time_series_boxplot(2, 20, Bank$ID)
time_series_boxplot(5, 20, Firm$ID)
head(Firm)
time_series_boxplot(5, 20, Firm$TOTAL_ASSETS)
time_series_boxplot(5, 20, Firm$DEBT)
Firm$IT_NO
max(Firm$IT_NO)
niter <- max(Government$IT_NO)
niter
nfirms <- length(Firm$IT_NO) / niter
nfirms
nIter <- max(Government$IT_NO)#
nFirms <- length(Firm$IT_NO) / nIter#
nHousehold <- length(Household$IT_NO) / nIter#
nBank <- length(Bank$IT_NO) / nIter
time_series_boxplot(nHousehold, nIter, Household$ID)
head(Household)
time_series_boxplot(nHousehold, nIter, Household$LIQUIDITY)
values
mean(values)
mean(values[,1])
mean(values[,2])
time_series_mean <- function(nagents, niter, datavector){#
	times <- (1:niter)#
	means <- (1:niter)#
	values <- matrix(datavector, nrow = niter, ncol = nagents, byrow = T)#
	for (i in 1:niter){#
		means[i] <- mean(values(i,))#
	}#
	plot(means~times)#
}
time_series_mean(nHousehold, nIter, Household$LIQUIDITY)
time_series_mean <- function(nagents, niter, datavector){#
	times <- (1:niter)#
	means <- (1:niter)#
	values <- matrix(datavector, nrow = niter, ncol = nagents, byrow = T)#
	for (i in 1:niter){#
		means[i] <- mean(values[i,])#
	}#
	plot(means~times)#
}
time_series_mean(nHousehold, nIter, Household$LIQUIDITY)
time_series_mean(nHousehold, nIter, Household$ID)
time_series_mean(nFirm, nIter, Firm$ID)
nIter <- max(Government$IT_NO)#
nFirms <- length(Firm$IT_NO) / nIter#
nHouseholds <- length(Household$IT_NO) / nIter#
nBanks <- length(Bank$IT_NO) / nIter#
#
time_series_boxplot(nHouseholds, nIter, Household$LIQUIDITY)
nIter <- max(Government$IT_NO)#
nFirms <- length(Firm$IT_NO) / nIter#
nHouseholds <- length(Household$IT_NO) / nIter#
nBanks <- length(Bank$IT_NO) / nIter#
#
time_series_mean(nHouseholds, nIter, Household$LIQUIDITY)
nIter <- max(Government$IT_NO)#
nFirms <- length(Firm$IT_NO) / nIter#
nHouseholds <- length(Household$IT_NO) / nIter#
nBanks <- length(Bank$IT_NO) / nIter#
#
time_series_mean(nFirms, nIter, Firm$ID)
time_series_point <- function(niter, datavector){#
	times <- (1:niter)#
	plot(datavector~times)#
}
nIter <- max(Government$IT_NO)#
nFirms <- length(Firm$IT_NO) / nIter#
nHouseholds <- length(Household$IT_NO) / nIter#
nBanks <- length(Bank$IT_NO) / nIter#
#
time_series_point(nIter, Government$ID)
head(Government)
nIter <- max(Government$IT_NO)#
nFirms <- length(Firm$IT_NO) / nIter#
nHouseholds <- length(Household$IT_NO) / nIter#
nBanks <- length(Bank$IT_NO) / nIter#
#
time_series_point(nIter, Government$UNEMPLOYMENT_RATE)
